generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String
  passwordHash   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  memberships    OrganizationMembership[]
  ownedOrgs      Organization[] @relation("OwnedOrganizations")
  organizerPlan  OrganizerPlan?
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  owner       User     @relation("OwnedOrganizations", fields: [ownerId], references: [id])
  memberships OrganizationMembership[]
  settings    OrganizationSetting[]
}

model OrganizationMembership {
  id             String   @id @default(cuid())
  userId         String
  organizationId String
  role           Role
  joinedAt       DateTime  @default(now())

  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@unique([userId, organizationId])
}

model OrganizationSetting {
  id             String   @id @default(cuid())
  organizationId String
  key            String
  value          String

  organization   Organization @relation(fields: [organizationId], references: [id])

  @@unique([organizationId, key])
}

model OrganizerPlan {
  id             String   @id @default(cuid())
  userId         String   @unique
  planType       PlanType
  maxTournaments Int
  createdAt      DateTime @default(now())

  user           User @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  STAFF
  FENCER
}

enum PlanType {
  FREE
  PRO
  ENTERPRISE
}
